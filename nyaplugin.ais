/// @ 0.13.1
### {
  name: "猫語化"
  version: "1.1"
  author: "artzsan@misskey.design"
  description: "ノートに直接変更を加える形で「な」を「にゃ」に変換して投稿します。見かけ上の変化ではないためプラグインをオフにしても投稿済みの投稿は人語に戻りません"
  permissions: ["write:notes"]
  config: {
    ext: {
      type: 'boolean'
      label: "強化版"
      description: "みゃああ"
      default: false
    }
    hiragana: {
      type: 'boolean'
      label: "ひらがな"
      description: "ひらがなを変換する"
      default: true
    }
    katakana: {
      type: 'boolean'
      label: "カタカナ"
      description: "カタカナを変換する"
      default: true
    }
    alphabet: {
      type: 'boolean'
      label: "アルファベット"
      description: "アルファベットを変換する"
      default: false
    }
  }
}
// objのnullプロパティ(本家対応済みバグ)を再帰的に除去
@remove_null_property(object) {
  if Core:type(object) != 'obj' {
    return object
  }
  let new_obj = {}
  each let kv Obj:kvs(object) {
    let v = remove_null_property(kv[1])
    if Core:type(v) != 'null' {
      Obj:set(new_obj kv[0] v)
    }
  }
  return new_obj
}

Plugin:register_note_post_interruptor(@(note){
  if (Plugin:config.ext) {
    if (Plugin:config.hiragana) note.text = note.text.replace("ま", "みゃ")
    if (Plugin:config.katakana) note.text = note.text.replace("マ", "ミャ")
    if (Plugin:config.alphabet) {
      note.text = note.text.replace("ma", "mya")
      note.text = note.text.replace("mA", "myA")
      note.text = note.text.replace("Ma", "Mya")
      note.text = note.text.replace("MA", "MYA")
    }
  }
  if (Plugin:config.hiragana) note.text = note.text.replace("な", "にゃ")
  if (Plugin:config.katakana) note.text = note.text.replace("ナ", "ニャ")
  if (Plugin:config.alphabet) {
    note.text = note.text.replace("na", "nya")
    note.text = note.text.replace("nA", "nyA")
    note.text = note.text.replace("Na", "Nya")
    note.text = note.text.replace("NA", "NYA")
  }
  note = remove_null_property(note)
  note
})
